buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    }
}

plugins {
    id 'nebula.plugin-plugin' version '13.2.0'
}

apply plugin: 'com.github.hierynomus.license'

repositories {
    jcenter()
}

group = 'org.gradle'
description = 'Allow failed test to rerun to discover flaky tests'

contacts {
    'jkschneider@gmail.com' {
        moniker 'Jon Schneider'
        github 'jkschneider'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testImplementation 'com.netflix.nebula:nebula-test:latest.release'
    testImplementation "org.codehaus.groovy:groovy-all:2.5.7"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
    testImplementation gradleTestKit()
}

pluginBundle {
    website = 'https://github.com/gradle/test-retry-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/test-retry-gradle-plugin.git'
    description = project.description

    plugins {
        retryPlugin {
            id = 'org.gradle.test-retry'
            displayName = 'Gradle test retry plugin'
            description = project.description
            tags = ['testing']
        }
    }

    mavenCoordinates {
        groupId = 'org.gradle'
        artifactId = 'test-retry-gradle-plugin'
    }
}

license {
    header = file('gradle/licenseHeader.txt')
    exclude '**/*.tokens'
    mapping {
        kt = 'JAVADOC_STYLE'
    }
    sourceSets = project.sourceSets
    strictCheck = true
}

bintray {
    repo = 'gradle-plugins'
    userOrg = 'gradle'
    websiteUrl = 'https://github.com/gradle/test-retry-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/test-retry-gradle-plugin.git'
    issueTrackerUrl = 'https://github.com/gradle/test-retry-gradle-plugin/issues'
    labels = ['gradle']
}
